var _user$project$App$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$App$update = F2(
	function (action, gameState) {
		var _p0 = action;
		if (_p0.ctor === 'InitialSeed') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					gameState,
					{
						seed: _elm_lang$core$Random$initialSeed(_p0._0)
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: A2(_user$project$StateUpdateManager$updateState, action, gameState),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$App$view = function (gameState) {
	var _p1 = gameState.screenState;
	if (_p1.ctor === 'InGame') {
		return _user$project$BoardUi$boardHtml(_p1._0);
	} else {
		return _user$project$MenuUi$menuHtml(_p1._0);
	}
};
var _user$project$App$init = {
	ctor: '_Tuple2',
	_0: {
		screenState: _user$project$MenuManager$initialMenuState,
		seed: _elm_lang$core$Random$initialSeed(
			_elm_lang$core$Basics$round(1234))
	},
	_1: A2(
		_elm_lang$core$Random$generate,
		_user$project$Action$InitialSeed,
		A2(_elm_lang$core$Random$int, _elm_lang$core$Random$minInt, _elm_lang$core$Random$maxInt))
};
var _user$project$App$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$App$init, view: _user$project$App$view, update: _user$project$App$update, subscriptions: _user$project$App$subscriptions})
};
var _user$project$App$Flags = function (a) {
	return {startingSeed: a};
};
